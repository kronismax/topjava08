Index: src/main/java/ru/javawebinar/topjava/web/json/JsonLocalDateTimeConverter.java
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/json/JsonLocalDateTimeConverter.java	(date 1476914523000)
+++ src/main/java/ru/javawebinar/topjava/web/json/JsonLocalDateTimeConverter.java	(date 1476914523000)
@@ -1,42 +0,0 @@
-package ru.javawebinar.topjava.web.json;
-
-import com.fasterxml.jackson.core.JsonGenerator;
-import com.fasterxml.jackson.core.JsonParser;
-import com.fasterxml.jackson.databind.DeserializationContext;
-import com.fasterxml.jackson.databind.JsonDeserializer;
-import com.fasterxml.jackson.databind.JsonSerializer;
-import com.fasterxml.jackson.databind.SerializerProvider;
-import ru.javawebinar.topjava.util.TimeUtil;
-
-import java.io.IOException;
-import java.time.LocalDateTime;
-
-/**
- * GKislin
- * 06.01.2015.
- */
-public class JsonLocalDateTimeConverter {
-    public static class UserSettingSerializer extends JsonSerializer<LocalDateTime> {
-        @Override
-        public void serialize(LocalDateTime ldt, JsonGenerator jgen, SerializerProvider provider) throws IOException {
-            jgen.writeString(TimeUtil.toString(ldt));
-        }
-
-        @Override
-        public Class<LocalDateTime> handledType() {
-            return LocalDateTime.class;
-        }
-    }
-
-    public static class UserSettingDeserializer extends JsonDeserializer<LocalDateTime> {
-        @Override
-        public LocalDateTime deserialize(JsonParser jp, DeserializationContext ctx) throws IOException {
-            return TimeUtil.parseLocalDateTime(jp.getText());
-        }
-
-        @Override
-        public Class<LocalDateTime> handledType() {
-            return LocalDateTime.class;
-        }
-    }
-}
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(date 1476914523000)
+++ pom.xml	(revision )
@@ -240,6 +240,11 @@
             <artifactId>jackson-datatype-hibernate5</artifactId>
             <version>${jackson-json.version}</version>
         </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.datatype</groupId>
+            <artifactId>jackson-datatype-jsr310</artifactId>
+            <version>${jackson-json.version}</version>
+        </dependency>
 
         <!--Test-->
         <dependency>
Index: src/main/java/ru/javawebinar/topjava/web/json/JacksonObjectMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/json/JacksonObjectMapper.java	(date 1476914523000)
+++ src/main/java/ru/javawebinar/topjava/web/json/JacksonObjectMapper.java	(revision )
@@ -4,11 +4,10 @@
 import com.fasterxml.jackson.annotation.JsonInclude;
 import com.fasterxml.jackson.annotation.PropertyAccessor;
 import com.fasterxml.jackson.databind.ObjectMapper;
-import com.fasterxml.jackson.databind.module.SimpleModule;
+import com.fasterxml.jackson.databind.SerializationFeature;
 import com.fasterxml.jackson.datatype.hibernate5.Hibernate5Module;
+import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
 
-import java.time.LocalDateTime;
-
 /**
  * User: gkislin
  * Date: 26.05.2014
@@ -30,10 +29,8 @@
     private JacksonObjectMapper() {
         registerModule(new Hibernate5Module());
 
-        SimpleModule customModule = new SimpleModule("customModule");
-        customModule.addSerializer(new JsonLocalDateTimeConverter.UserSettingSerializer());
-        customModule.addDeserializer(LocalDateTime.class, new JsonLocalDateTimeConverter.UserSettingDeserializer());
-        registerModule(customModule);
+        registerModule(new JavaTimeModule());
+        configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);
 
         setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE);
         setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY);
\ No newline at end of file
